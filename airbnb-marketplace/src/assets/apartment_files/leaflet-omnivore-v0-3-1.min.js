/*
Ajout Dyl : 
- correction de la fonction kmlColor() => respecte le format Google (inversé)
- désactivation du blocage d'opacité dans le cas d'une couleur de fond définie (dans getPlacemark() au niveau des polyStyle)
*/
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n;"undefined"!=typeof window?n=window:"undefined"!=typeof global?n=global:"undefined"!=typeof self&&(n=self),n.omnivore=e()}}(function(){return function e(n,r,t){function o(u,a){if(!r[u]){if(!n[u]){var s="function"==typeof require&&require;if(!a&&s)return s(u,!0);if(i)return i(u,!0);var f=new Error("Cannot find module '"+u+"'");throw f.code="MODULE_NOT_FOUND",f}var l=r[u]={exports:{}};n[u][0].call(l.exports,function(e){var r=n[u][1][e];return o(r||e)},l,l.exports,e,n,r,t)}return r[u].exports}for(var i="function"==typeof require&&require,u=0;u<t.length;u++)o(t[u]);return o}({1:[function(e,n,r){var t=e("corslite"),o=e("csv2geojson"),i=e("wellknown"),u=e("polyline"),a=e("topojson/topojson.js"),s=e("togeojson");function f(e,n){"addData"in e&&e.addData(n),"setGeoJSON"in e&&e.setGeoJSON(n)}function l(e,n,r){var t="string"==typeof e?JSON.parse(e):e;r=r||L.geoJson();for(var o in t.objects){var i=a.feature(t,t.objects[o]);i.features?f(r,i.features):f(r,i)}return r}function c(e,n,r){return r=r||L.geoJson(),n=n||{},o.csv2geojson(e,n,function(e,n){if(e)return r.fire("error",{error:e});f(r,n)}),r}function p(e,n,r){var t=v(e);return t?(f(r=r||L.geoJson(),s.gpx(t)),r):r.fire("error",{error:"Could not parse GPX"})}function d(e,n,r){var t=v(e);return t?(f(r=r||L.geoJson(),s.kml(t)),r):r.fire("error",{error:"Could not parse KML"})}function g(e,n,r){r=r||L.geoJson(),n=n||{};for(var t=u.decode(e,n.precision),o={type:"LineString",coordinates:[]},i=0;i<t.length;i++)o.coordinates[i]=[t[i][1],t[i][0]];return f(r,o),r}function h(e,n,r){return f(r=r||L.geoJson(),i(e)),r}function v(e){return"string"==typeof e?(new DOMParser).parseFromString(e,"text/xml"):e}n.exports.polyline=function(e,n,r){var o=r||L.geoJson();return t(e,function(e,r){if(e)return o.fire("error",{error:e});g(r.responseText,n,o),o.fire("ready")}),o},n.exports.polyline.parse=g,n.exports.geojson=function(e,n,r){var o=r||L.geoJson();return t(e,function(e,n){if(e)return o.fire("error",{error:e});f(o,JSON.parse(n.responseText)),o.fire("ready")}),o},n.exports.topojson=function(e,n,r){var o=r||L.geoJson();return t(e,function(e,r){if(e)return o.fire("error",{error:e});l(r.responseText,n,o),o.fire("ready")}),o},n.exports.topojson.parse=l,n.exports.csv=function(e,n,r){var o=r||L.geoJson();return t(e,function(e,r){var t;if(e)return o.fire("error",{error:e});function i(){t=!0}o.on("error",i),c(r.responseText,n,o),o.off("error",i),t||o.fire("ready")}),o},n.exports.csv.parse=c,n.exports.gpx=function(e,n,r){var o=r||L.geoJson();return t(e,function(e,r){var t;if(e)return o.fire("error",{error:e});function i(){t=!0}o.on("error",i),p(r.responseXML||r.responseText,n,o),o.off("error",i),t||o.fire("ready")}),o},n.exports.gpx.parse=p,n.exports.kml=function(e,n,r){var o=r||L.geoJson();return t(e,function(e,r){var t;if(e)return o.fire("error",{error:e});function i(){t=!0}o.on("error",i),d(r.responseXML||r.responseText,n,o),o.off("error",i),t||o.fire("ready")}),o},n.exports.kml.parse=d,n.exports.wkt=function(e,n,r){var o=r||L.geoJson();return t(e,function(e,r){if(e)return o.fire("error",{error:e});h(r.responseText,n,o),o.fire("ready")}),o},n.exports.wkt.parse=h},{corslite:5,csv2geojson:6,polyline:9,togeojson:10,"topojson/topojson.js":11,wellknown:12}],2:[function(e,n,r){},{}],3:[function(e,n,r){n.exports=e(2)},{"/Users/tmcw/src/leaflet-omnivore/node_modules/browserify/lib/_empty.js":2}],4:[function(e,n,r){var t=n.exports={};function o(){}t.nextTick=function(){var e="undefined"!=typeof window&&window.setImmediate,n="undefined"!=typeof window&&window.MutationObserver,r="undefined"!=typeof window&&window.postMessage&&window.addEventListener;if(e)return function(e){return window.setImmediate(e)};var t=[];if(n){var o=document.createElement("div");return new MutationObserver(function(){var e=t.slice();t.length=0,e.forEach(function(e){e()})}).observe(o,{attributes:!0}),function(e){t.length||o.setAttribute("yes","no"),t.push(e)}}return r?(window.addEventListener("message",function(e){var n=e.source;n!==window&&null!==n||"process-tick"!==e.data||(e.stopPropagation(),t.length>0&&t.shift()())},!0),function(e){t.push(e),window.postMessage("process-tick","*")}):function(e){setTimeout(e,0)}}(),t.title="browser",t.browser=!0,t.env={},t.argv=[],t.on=o,t.addListener=o,t.once=o,t.off=o,t.removeListener=o,t.removeAllListeners=o,t.emit=o,t.binding=function(e){throw new Error("process.binding is not supported")},t.cwd=function(){return"/"},t.chdir=function(e){throw new Error("process.chdir is not supported")}},{}],5:[function(e,n,r){void 0!==n&&(n.exports=function(e,n,r){var t=!1;if(void 0===window.XMLHttpRequest)return n(Error("Browser not supported"));if(void 0===r){var o=e.match(/^\s*https?:\/\/[^\/]*/);r=o&&o[0]!==location.protocol+"//"+location.domain+(location.port?":"+location.port:"")}var i=new window.XMLHttpRequest;if(r&&!("withCredentials"in i)){i=new window.XDomainRequest;var u=n;n=function(){if(t)u.apply(this,arguments);else{var e=this,n=arguments;setTimeout(function(){u.apply(e,n)},0)}}}function a(){var e;void 0===i.status||(e=i.status)>=200&&e<300||304===e?n.call(i,null,i):n.call(i,i,null)}return"onload"in i?i.onload=a:i.onreadystatechange=function(){4===i.readyState&&a()},i.onerror=function(e){n.call(this,e||!0,null),n=function(){}},i.onprogress=function(){},i.ontimeout=function(e){n.call(this,e,null),n=function(){}},i.onabort=function(e){n.call(this,e,null),n=function(){}},i.open("GET",e,!0),i.send(null),t=!0,i})},{}],6:[function(e,n,r){var t=e("dsv"),o=e("sexagesimal");function i(e){return!!e.match(/(Lat)(itude)?/gi)}function u(e){return!!e.match(/(L)(on|ng)(gitude)?/i)}function a(e){return"object"==typeof e?Object.keys(e).length:0}function s(e){var n=[];return[",",";","\t","|"].forEach(function(r){var o=t(r).parse(e);if(o.length>=1){for(var i=a(o[0]),u=0;u<o.length;u++)if(a(o[u])!==i)return;n.push({delimiter:r,arity:Object.keys(o[0]).length})}}),n.length?n.sort(function(e,n){return n.arity-e.arity})[0].delimiter:null}n.exports={isLon:u,isLat:i,csv:t.csv.parse,tsv:t.tsv.parse,dsv:t,auto:function(e){var n=s(e);return n?t(n).parse(e):null},csv2geojson:function(e,n,r){r||(r=n,n={}),n.delimiter=n.delimiter||",";var a=n.latfield||"",f=n.lonfield||"",l=[],c={type:"FeatureCollection",features:l};if("auto"===n.delimiter&&"string"==typeof e&&(n.delimiter=s(e),!n.delimiter))return r({type:"Error",message:"Could not autodetect delimiter"});var p="string"==typeof e?t(n.delimiter).parse(e):e;if(!p.length)return r(null,c);if(!a||!f){for(var d in p[0])!a&&i(d)&&(a=d),!f&&u(d)&&(f=d);if(!a||!f){var g=[];for(var h in p[0])g.push(h);return r({type:"Error",message:"Latitude and longitude fields not present",data:p,fields:g})}}for(var v=[],m=0;m<p.length;m++)if(void 0!==p[m][f]&&void 0!==p[m][f]){var y,w,x,L=p[m][f],E=p[m][a];(x=o(L,"EW"))&&(L=x),(x=o(E,"NS"))&&(E=x),y=parseFloat(L),w=parseFloat(E),isNaN(y)||isNaN(w)?v.push({message:"A row contained an invalid value for latitude or longitude",row:p[m]}):(n.includeLatLon||(delete p[m][f],delete p[m][a]),l.push({type:"Feature",properties:p[m],geometry:{type:"Point",coordinates:[parseFloat(y),parseFloat(w)]}}))}r(v.length?v:null,c)},toLine:function(e){for(var n=e.features,r={type:"Feature",geometry:{type:"LineString",coordinates:[]}},t=0;t<n.length;t++)r.geometry.coordinates.push(n[t].geometry.coordinates);return r.properties=n[0].properties,{type:"FeatureCollection",features:[r]}},toPolygon:function(e){for(var n=e.features,r={type:"Feature",geometry:{type:"Polygon",coordinates:[[]]}},t=0;t<n.length;t++)r.geometry.coordinates[0].push(n[t].geometry.coordinates);return r.properties=n[0].properties,{type:"FeatureCollection",features:[r]}}}},{dsv:7,sexagesimal:8}],7:[function(e,n,r){e("fs");n.exports=new Function('dsv.version = "0.0.3";\n\ndsv.tsv = dsv("\\t");\ndsv.csv = dsv(",");\n\nfunction dsv(delimiter) {\n  var dsv = {},\n      reFormat = new RegExp("[\\"" + delimiter + "\\n]"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  dsv.parse = function(text, f) {\n    var o;\n    return dsv.parseRows(text, function(row, i) {\n      if (o) return o(row, i - 1);\n      var a = new Function("d", "return {" + row.map(function(name, i) {\n        return JSON.stringify(name) + ": d[" + i + "]";\n      }).join(",") + "}");\n      o = f ? function(row, i) { return f(a(row), i); } : a;\n    });\n  };\n\n  dsv.parseRows = function(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        var c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.substring(j + 1, i).replace(/""/g, "\\"");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var c = text.charCodeAt(I++), k = 1;\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.substring(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.substring(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && !(a = f(a, n++))) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  };\n\n  dsv.format = function(rows) {\n    if (Array.isArray(rows[0])) return dsv.formatRows(rows); // deprecated; use formatRows\n    var fieldSet = {}, fields = [];\n\n    // Compute unique fields in order of discovery.\n    rows.forEach(function(row) {\n      for (var field in row) {\n        if (!(field in fieldSet)) {\n          fields.push(fieldSet[field] = field);\n        }\n      }\n    });\n\n    return [fields.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return fields.map(function(field) {\n        return formatValue(row[field]);\n      }).join(delimiter);\n    })).join("\\n");\n  };\n\n  dsv.formatRows = function(rows) {\n    return rows.map(formatRow).join("\\n");\n  };\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return reFormat.test(text) ? "\\"" + text.replace(/\\"/g, "\\"\\"") + "\\"" : text;\n  }\n\n  return dsv;\n}\n;return dsv')()},{fs:2}],8:[function(e,n,r){n.exports=function(e,n){if(n||(n="NSEW"),"string"!=typeof e)return null;var r=e.match(/^([0-9.]+)°? *(?:([0-9.]+)['’′‘] *)?(?:([0-9.]+)(?:''|"|”|″) *)?([NSEW])?/);return r?r[4]&&-1===n.indexOf(r[4])?null:((r[1]?parseFloat(r[1]):0)+(r[2]?parseFloat(r[2])/60:0)+(r[3]?parseFloat(r[3])/3600:0))*(r[4]&&"S"===r[4]||"W"===r[4]?-1:1):null}},{}],9:[function(e,n,r){var t={};function o(e,n){e=Math.round(e*n),(e<<=1)<0&&(e=~e);for(var r="";e>=32;)r+=String.fromCharCode(63+(32|31&e)),e>>=5;return r+=String.fromCharCode(e+63)}t.decode=function(e,n){for(var r,t=0,o=0,i=0,u=[],a=0,s=0,f=null,l=Math.pow(10,n||5);t<e.length;){f=null,a=0,s=0;do{s|=(31&(f=e.charCodeAt(t++)-63))<<a,a+=5}while(f>=32);r=1&s?~(s>>1):s>>1,a=s=0;do{s|=(31&(f=e.charCodeAt(t++)-63))<<a,a+=5}while(f>=32);o+=r,i+=1&s?~(s>>1):s>>1,u.push([o/l,i/l])}return u},t.encode=function(e,n){if(!e.length)return"";for(var r=Math.pow(10,n||5),t=o(e[0][0],r)+o(e[0][1],r),i=1;i<e.length;i++){var u=e[i],a=e[i-1];t+=o(u[0]-a[0],r),t+=o(u[1]-a[1],r)}return t},void 0!==typeof n&&(n.exports=t)},{}],10:[function(e,n,r){(function(t){toGeoJSON=function(){"use strict";var n,o=/\s*/g,i=/^\s*|\s*$/g,u=/\s+/;function a(e){if(!e||!e.length)return 0;for(var n=0,r=0;n<e.length;n++)r=(r<<5)-r+e.charCodeAt(n)|0;return r}function s(e,n){return e.getElementsByTagName(n)}function f(e,n){return e.getAttribute(n)}function l(e,n){return parseFloat(f(e,n))}function c(e,n){var r=s(e,n);return r.length?r[0]:null}function p(e){for(var n=0,r=[];n<e.length;n++)r[n]=parseFloat(e[n]);return r}function d(e){var n;return e&&(n=e).normalize&&n.normalize(),e&&e.firstChild&&e.firstChild.nodeValue||""}function g(e){return p(e.replace(o,"").split(","))}function h(e){for(var n=e.replace(i,"").split(u),r=[],t=0;t<n.length;t++)r.push(g(n[t]));return r}function v(e){var n=[l(e,"lon"),l(e,"lat")],r=c(e,"ele"),t=c(e,"time");return r&&n.push(parseFloat(d(r))),{coordinates:n,time:t?d(t):null}}return"undefined"!=typeof XMLSerializer?n=new XMLSerializer:"object"!=typeof r||"object"!=typeof t||t.browser||(n=new(e("xmldom").XMLSerializer)),{kml:function(e){for(var r,t={type:"FeatureCollection",features:[]},o={},i=["Polygon","LineString","Point","Track","gx:Track"],u=s(e,"Placemark"),l=s(e,"Style"),v=0;v<l.length;v++)o["#"+f(l[v],"id")]=a((r=l[v],void 0!==r.xml?r.xml:n.serializeToString(r))).toString(16);for(var m=0;m<u.length;m++)t.features=t.features.concat(x(u[m]));function y(e){var n,r;if("#"===(e=e||"").substr(0,1)&&(e=e.substr(1)),6!==e.length&&3!==e.length||(n=e),8===e.length){var t=function(e,n){if(null===n&&(n=1),null===e||n<1)return!1;for(var r=[],t=0,o=(e+="").length;t<o;)r.push(e.slice(t,t+=n));return r}(e,2).reverse(),o=t[3];t.splice(3,1),n=t.join(""),r=(parseInt(o,16)/255).toFixed(2)}return[n,isNaN(r)?void 0:r]}function w(e){var n,r=s(e,"coord"),t=[],o=[];0===r.length&&(r=s(e,"gx:coord"));for(var i=0;i<r.length;i++)t.push((n=d(r[i]),p(n.split(" "))));var u=s(e,"when");for(i=0;i<u.length;i++)o.push(d(u[i]));return{coords:t,times:o}}function x(e){var n,r=function e(n){var r,t,o,u,a,f=[],l=[];if(c(n,"MultiGeometry"))return e(c(n,"MultiGeometry"));if(c(n,"MultiTrack"))return e(c(n,"MultiTrack"));if(c(n,"gx:MultiTrack"))return e(c(n,"gx:MultiTrack"));for(o=0;o<i.length;o++)if(t=s(n,i[o]))for(u=0;u<t.length;u++)if(r=t[u],"Point"==i[o])f.push({type:"Point",coordinates:g(d(c(r,"coordinates")))});else if("LineString"==i[o])f.push({type:"LineString",coordinates:h(d(c(r,"coordinates")))});else if("Polygon"==i[o]){var p=s(r,"LinearRing"),v=[];for(a=0;a<p.length;a++)v.push(h(d(c(p[a],"coordinates"))));f.push({type:"Polygon",coordinates:v})}else if("Track"==i[o]||"gx:Track"==i[o]){var m=w(r);f.push({type:"LineString",coordinates:m.coords}),m.times.length&&l.push(m.times)}return{geoms:f,coordTimes:l}}(e),t={},u=d(c(e,"name")),a=d(c(e,"styleUrl")),l=d(c(e,"description")),p=c(e,"TimeSpan"),v=c(e,"ExtendedData"),m=c(e,"LineStyle"),x=c(e,"PolyStyle");if(!r.geoms.length)return[];if(u&&(t.name=u),a&&o[a]&&(t.styleUrl=a,t.styleHash=o[a]),l&&(t.description=l),p){var L=d(c(p,"begin")),E=d(c(p,"end"));t.timespan={begin:L,end:E}}if(m){var S=y(d(c(m,"color"))),b=S[0],k=S[1],M=parseFloat(d(c(m,"width")));b&&(t.stroke=b),isNaN(k)||(t["stroke-opacity"]=k),isNaN(M)||(t["stroke-width"]=M)}if(x){var j=y(d(c(x,"color"))),F=j[0],N=j[1],C=(d(c(x,"fill")),d(c(x,"outline")));F&&(t.fill=F),isNaN(N)||(t["fill-opacity"]=N),C&&(t["stroke-opacity"]="1"===C?1:0)}if(v){var P=s(v,"Data"),T=s(v,"SimpleData");for(n=0;n<P.length;n++)t[P[n].getAttribute("name")]=d(c(P[n],"value"));for(n=0;n<T.length;n++)t[T[n].getAttribute("name")]=d(T[n])}r.coordTimes.length&&(t.coordTimes=1===r.coordTimes.length?r.coordTimes[0]:r.coordTimes);var O={type:"Feature",geometry:1===r.geoms.length?r.geoms[0]:{type:"GeometryCollection",geometries:r.geoms},properties:t};return f(e,"id")&&(O.id=f(e,"id")),[O]}return t},gpx:function(e){var n,r,t=s(e,"trk"),o=s(e,"rte"),i=s(e,"wpt"),u={type:"FeatureCollection",features:[]};for(n=0;n<t.length;n++)(r=f(t[n]))&&u.features.push(r);for(n=0;n<o.length;n++)(r=l(o[n]))&&u.features.push(r);for(n=0;n<i.length;n++)u.features.push(p(i[n]));function a(e,n){var r=s(e,n),t=[],o=[],i=r.length;if(!(i<2)){for(var u=0;u<i;u++){var a=v(r[u]);t.push(a.coordinates),a.time&&o.push(a.time)}return{line:t,times:o}}}function f(e){for(var n,r=s(e,"trkseg"),t=[],o=[],i=0;i<r.length;i++)(n=a(r[i],"trkpt")).line&&t.push(n.line),n.times.length&&o.push(n.times);if(0!==t.length){var u=g(e);return o.length&&(u.coordTimes=1===t.length?o[0]:o),{type:"Feature",properties:u,geometry:{type:1===t.length?"LineString":"MultiLineString",coordinates:1===t.length?t[0]:t}}}}function l(e){var n=a(e,"rtept");if(n){var r={type:"Feature",properties:g(e),geometry:{type:"LineString",coordinates:n}};return n.times.length&&(r.geometry.times=n.times),r}}function p(e){var n=g(e);return n.sym=d(c(e,"sym")),{type:"Feature",properties:n,geometry:{type:"Point",coordinates:v(e).coordinates}}}function g(e){var n,r=["name","desc","author","copyright","link","time","keywords"],t={};for(n=0;n<r.length;n++)t[r[n]]=d(c(e,r[n]));return function(e){var n={};for(var r in e)e[r]&&(n[r]=e[r]);return n}(t)}return u}}}(),void 0!==n&&(n.exports=toGeoJSON)}).call(this,e("_process"))},{_process:4,xmldom:3}],11:[function(e,r,t){!function(){var e={version:"1.6.8",mesh:function(e){return a(e,o.apply(this,arguments))},meshArcs:o,merge:function(e){return a(e,i.apply(this,arguments))},mergeArcs:i,feature:function(e,n){return"GeometryCollection"===n.type?{type:"FeatureCollection",features:n.geometries.map(function(n){return u(e,n)})}:u(e,n)},neighbors:function(e){var n={},r=e.map(function(){return[]});function t(e,r){e.forEach(function(e){e<0&&(e=~e);var t=n[e];t?t.push(r):n[e]=[r]})}function o(e,n){e.forEach(function(e){t(e,n)})}var i={LineString:t,MultiLineString:o,Polygon:o,MultiPolygon:function(e,n){e.forEach(function(e){o(e,n)})}};e.forEach(function e(n,r){"GeometryCollection"===n.type?n.geometries.forEach(function(n){e(n,r)}):n.type in i&&i[n.type](n.arcs,r)});for(var u in n)for(var a=n[u],f=a.length,l=0;l<f;++l)for(var c=l+1;c<f;++c){var p,d=a[l],g=a[c];(p=r[d])[u=s(p,g)]!==g&&p.splice(u,0,g),(p=r[g])[u=s(p,d)]!==d&&p.splice(u,0,d)}return r},presimplify:function(e,n){var r,t=c(e.transform),o=function(e){if(!e)return p;var n,r,t=e.scale[0],o=e.scale[1],i=e.translate[0],u=e.translate[1];return function(e,a){a||(n=r=0);var s=(e[0]-i)/t|0,f=(e[1]-u)/o|0;e[0]=s-n,e[1]=f-r,n=s,r=f}}(e.transform),i=function(){var e={},n=[],r=0;function t(e,r){for(;r>0;){var t=(r+1>>1)-1,o=n[t];if(l(e,o)>=0)break;n[o._=r]=o,n[e._=r=t]=e}}function o(e,t){for(;;){var o=t+1<<1,i=o-1,u=t,a=n[u];if(i<r&&l(n[i],a)<0&&(a=n[u=i]),o<r&&l(n[o],a)<0&&(a=n[u=o]),u===t)break;n[a._=t]=a,n[e._=t=u]=e}}return e.push=function(e){return t(n[e._=r]=e,r++),r},e.pop=function(){if(!(r<=0)){var e,t=n[0];return--r>0&&(e=n[r],o(n[e._=0]=e,0)),t}},e.remove=function(e){var i,u=e._;if(n[u]===e)return u!==--r&&(l(i=n[r],e)<0?t:o)(n[i._=u]=i,u),u},e}(),u=0;n||(n=f);e.arcs.forEach(function(e){var o=[];e.forEach(t);for(var u=1,a=e.length-1;u<a;++u)(r=e.slice(u-1,u+2))[1][2]=n(r),o.push(r),i.push(r);e[0][2]=e[a][2]=1/0;for(var u=0,a=o.length;u<a;++u)(r=o[u]).previous=o[u-1],r.next=o[u+1]});for(;r=i.pop();){var a=r.previous,s=r.next;r[1][2]<u?r[1][2]=u:u=r[1][2],a&&(a.next=s,a[2]=r[2],d(a)),s&&(s.previous=a,s[0]=r[0],d(s))}function d(e){i.remove(e),e[1][2]=n(e),i.push(e)}return e.arcs.forEach(function(e){e.forEach(o)}),e}};function t(e,n){var r={},t={},o={},i=[],u=-1;function a(e,n){for(var t in e){var o=e[t];delete n[o.start],delete o.start,delete o.end,o.forEach(function(e){r[e<0?~e:e]=1}),i.push(o)}}return n.forEach(function(r,t){var o,i=e.arcs[r<0?~r:r];i.length<3&&!i[1][0]&&!i[1][1]&&(o=n[++u],n[u]=r,n[t]=o)}),n.forEach(function(n){var r,i,u=function(n){var r,t=e.arcs[n<0?~n:n],o=t[0];e.transform?(r=[0,0],t.forEach(function(e){r[0]+=e[0],r[1]+=e[1]})):r=t[t.length-1];return n<0?[r,o]:[o,r]}(n),a=u[0],s=u[1];if(r=o[a])if(delete o[r.end],r.push(n),r.end=s,i=t[s]){delete t[i.start];var f=i===r?r:r.concat(i);t[f.start=r.start]=o[f.end=i.end]=f}else t[r.start]=o[r.end]=r;else if(r=t[s])if(delete t[r.start],r.unshift(n),r.start=a,i=o[a]){delete o[i.end];var l=i===r?r:i.concat(r);t[l.start=i.start]=o[l.end=r.end]=l}else t[r.start]=o[r.end]=r;else t[(r=[n]).start=a]=o[r.end=s]=r}),a(o,t),a(t,o),n.forEach(function(e){r[e<0?~e:e]||i.push([e])}),i}function o(e,n,r){var o=[];if(arguments.length>1){var i,u=[];function a(e){var n=e<0?~e:e;(u[n]||(u[n]=[])).push({i:e,g:i})}function s(e){e.forEach(a)}function f(e){e.forEach(s)}var l={LineString:s,MultiLineString:f,Polygon:f,MultiPolygon:function(e){e.forEach(f)}};!function e(n){"GeometryCollection"===n.type?n.geometries.forEach(e):n.type in l&&(i=n,l[n.type](n.arcs))}(n),u.forEach(arguments.length<3?function(e){o.push(e[0].i)}:function(e){r(e[0].g,e[e.length-1].g)&&o.push(e[0].i)})}else for(var c=0,p=e.arcs.length;c<p;++c)o.push(c);return{type:"MultiLineString",arcs:t(e,o)}}function i(e,r){var o={},i=[],u=[];function s(e){e.forEach(function(n){n.forEach(function(n){(o[n=n<0?~n:n]||(o[n]=[])).push(e)})}),i.push(e)}function f(n){return function(e){var n,r=-1,t=e.length,o=e[t-1],i=0;for(;++r<t;)n=o,o=e[r],i+=n[0]*o[1]-n[1]*o[0];return.5*i}(a(e,{type:"Polygon",arcs:[n]}).coordinates[0])>0}return r.forEach(function(e){"Polygon"===e.type?s(e.arcs):"MultiPolygon"===e.type&&e.arcs.forEach(s)}),i.forEach(function(e){if(!e._){var n=[],r=[e];for(e._=1,u.push(n);e=r.pop();)n.push(e),e.forEach(function(e){e.forEach(function(e){o[e<0?~e:e].forEach(function(e){e._||(e._=1,r.push(e))})})})}}),i.forEach(function(e){delete e._}),{type:"MultiPolygon",arcs:u.map(function(r){var i=[];if(r.forEach(function(e){e.forEach(function(e){e.forEach(function(e){o[e<0?~e:e].length<2&&i.push(e)})})}),i=t(e,i),(n=i.length)>1)for(var u,a=f(r[0][0]),s=0;s<n;++s)if(a===f(i[s])){u=i[0],i[0]=i[s],i[s]=u;break}return i})}}function u(e,n){var r={type:"Feature",id:n.id,properties:n.properties||{},geometry:a(e,n)};return null==n.id&&delete r.id,r}function a(e,n){var r=c(e.transform),t=e.arcs;function o(e,n){n.length&&n.pop();for(var o,i=t[e<0?~e:e],u=0,a=i.length;u<a;++u)n.push(o=i[u].slice()),r(o,u);e<0&&function(e,n){var r,t=e.length,o=t-n;for(;o<--t;)r=e[o],e[o++]=e[t],e[t]=r}(n,a)}function i(e){return e=e.slice(),r(e,0),e}function u(e){for(var n=[],r=0,t=e.length;r<t;++r)o(e[r],n);return n.length<2&&n.push(n[0].slice()),n}function a(e){for(var n=u(e);n.length<4;)n.push(n[0].slice());return n}function s(e){return e.map(a)}var f={Point:function(e){return i(e.coordinates)},MultiPoint:function(e){return e.coordinates.map(i)},LineString:function(e){return u(e.arcs)},MultiLineString:function(e){return e.arcs.map(u)},Polygon:function(e){return s(e.arcs)},MultiPolygon:function(e){return e.arcs.map(s)}};return function e(n){var r=n.type;return"GeometryCollection"===r?{type:r,geometries:n.geometries.map(e)}:r in f?{type:r,coordinates:f[r](n)}:null}(n)}function s(e,n){for(var r=0,t=e.length;r<t;){var o=r+t>>>1;e[o]<n?r=o+1:t=o}return r}function f(e){var n=e[0],r=e[1],t=e[2];return Math.abs((n[0]-t[0])*(r[1]-n[1])-(n[0]-r[0])*(t[1]-n[1]))}function l(e,n){return e[1][2]-n[1][2]}function c(e){if(!e)return p;var n,r,t=e.scale[0],o=e.scale[1],i=e.translate[0],u=e.translate[1];return function(e,a){a||(n=r=0),e[0]=(n+=e[0])*t+i,e[1]=(r+=e[1])*o+u}}function p(){}"object"==typeof r&&r.exports?r.exports=e:this.topojson=e}()},{}],12:[function(e,n,r){n.exports=o,n.exports.parse=o,n.exports.stringify=function e(n){"Feature"===n.type&&(n=n.geometry);function r(e){return 2===e.length?e[0]+" "+e[1]:3===e.length?e[0]+" "+e[1]+" "+e[2]:void 0}function t(e){return e.map(r).join(", ")}function o(e){return e.map(t).map(i).join(", ")}function i(e){return"("+e+")"}switch(n.type){case"Point":return"POINT ("+r(n.coordinates)+")";case"LineString":return"LINESTRING ("+t(n.coordinates)+")";case"Polygon":return"POLYGON ("+o(n.coordinates)+")";case"MultiPoint":return"MULTIPOINT ("+t(n.coordinates)+")";case"MultiPolygon":return"MULTIPOLYGON ("+n.coordinates.map(o).map(i).join(", ")+")";case"MultiLineString":return"MULTILINESTRING ("+o(n.coordinates)+")";case"GeometryCollection":return"GEOMETRYCOLLECTION ("+n.geometries.map(e).join(", ")+")";default:throw new Error("stringify requires a valid GeoJSON Feature or geometry object as input")}};var t=/^[-+]?([0-9]*\.[0-9]+|[0-9]+)([eE][-+]?[0-9]+)?/;function o(e){var n,r=e.split(";"),o=(e=r.pop(),(r.shift()||"").split("=").pop()),i=0;function u(n){var r=e.substring(i).match(n);return r?(i+=r[0].length,r[0]):null}function a(){u(/^\s*/)}function s(){a();for(var e,n=0,r=[],o=[r],i=r;e=u(/^(\()/)||u(/^(\))/)||u(/^(\,)/)||u(t);){if("("==e)o.push(i),i=[],o[o.length-1].push(i),n++;else if(")"==e){if(!(i=o.pop()))return;if(0===--n)break}else if(","===e)i=[],o[o.length-1].push(i);else{if(isNaN(parseFloat(e)))return null;i.push(parseFloat(e))}a()}return 0!==n?null:r}function f(){for(var e,n,r=[];n=u(t)||u(/^(\,)/);)","==n?(r.push(e),e=[]):(e||(e=[]),e.push(parseFloat(n))),a();return e&&r.push(e),r.length?r:null}function l(){return function(){if(!u(/^(point)/i))return null;if(a(),!u(/^(\()/))return null;var e=f();return e?(a(),u(/^(\))/)?{type:"Point",coordinates:e[0]}:null):null}()||function(){if(!u(/^(linestring)/i))return null;if(a(),!u(/^(\()/))return null;var e=f();return e&&u(/^(\))/)?{type:"LineString",coordinates:e}:null}()||(u(/^(polygon)/i)?(a(),{type:"Polygon",coordinates:s()}):null)||function(){if(!u(/^(multipoint)/i))return null;a();var e=s();return e?(a(),{type:"MultiPoint",coordinates:e}):null}()||function(){if(!u(/^(multilinestring)/i))return null;a();var e=s();return e?(a(),{type:"MultiLineString",coordinates:e}):null}()||(u(/^(multipolygon)/i)?(a(),{type:"MultiPolygon",coordinates:s()}):null)||function(){var e,n=[];if(!u(/^(geometrycollection)/i))return null;if(a(),!u(/^(\()/))return null;for(;e=l();)n.push(e),a(),u(/^(\,)/),a();return u(/^(\))/)?{type:"GeometryCollection",geometries:n}:null}()}return(n=l())&&o.match(/\d+/)&&(n.crs={type:"name",properties:{name:"urn:ogc:def:crs:EPSG::"+o}}),n}},{}]},{},[1])(1)});